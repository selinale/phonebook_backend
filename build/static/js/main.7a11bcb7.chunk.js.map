{"version":3,"sources":["services/persons.js","components/Person.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","Notification","_ref","message","error","react_default","a","createElement","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","searchName","setSearchName","_useState7","_useState8","newNumber","setNewNumber","_useState9","showAll","_useState11","_useState12","newMessage","setNewMessage","useEffect","personService","initialPersons","personsToShow","filter","person","name","toLowerCase","includes","components_Notification","value","onChange","event","target","onSubmit","preventDefault","_step","personObject","number","Math","floor","random","ehto","_iterator","_createForOfIteratorHelper","s","n","done","tyyppi","err","e","f","window","confirm","setTimeout","catch","console","log","map","key","addPerson","type","onClick","deletePerson","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7a11bcb7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)  \n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)  \n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)  \n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, \n  create, \n  update,\n  remove \n}","import React from 'react'\nimport personService from '../services/persons'\n\nconst addPerson = (event, {persons, newName, newNumber, newMessage, setPersons, setNewName, setNewNumber, setNewMessage}) => {\n\n  event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: Math.floor(Math.random() * 5000)\n    }\n    \n    var ehto = false\n    for (const person of persons) {\n       if (person.name === newName) {\n         var tyyppi = person\n         ehto = true\n         break\n       }\n    }\n\n    if (ehto) {\n      const message = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (message) {\n        personService\n        .update(tyyppi.id, personObject)\n        .then(() =>\n        personService\n          .getAll()\n          .then(initialPersons => {\n            setNewMessage({message:`The number of '${personObject.name}' was changed`, error:false})\n            setTimeout(() => {\n            setNewMessage(null)\n            }, 3000)\n            setPersons(initialPersons)\n          }))\n        .catch(error => {\n          setNewMessage({message:`Information of '${personObject.name}' has already been removed from server`, error:true})\n        })  \n      } else {\n        console.log('')\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewMessage({message:`The person named '${personObject.name}' was added`, error:false})\n          setTimeout(() => {\n            setNewMessage(null)\n          }, 3000)\n        })\n        .catch(error => {\n          setNewMessage({message: error.response.data.error, error:true})\n          console.log(error.response.data)\n        })\n    } \n    setNewName('')\n    setNewNumber('')\n\n  return (\n    <div>\n      {persons.map(function(person) {\n          return <ul key={person.id}>{person.name} {person.number}</ul>\n        })}\n    </div>\n  )\n}\n\nconst deletePerson = (id, name, setPersons, setNewMessage) => {\n  const message = window.confirm(`Delete ${name}?`)\n    \n  if (message) {\n    personService\n      .remove(id)\n      .then(() =>\n        personService\n          .getAll()\n          .then(initialPersons => {\n            setNewMessage({message:`The person named '${name}' was removed`, error:false})\n            setTimeout(() => {\n              setNewMessage(null)\n            }, 3000)\n            setPersons(initialPersons)\n          }))\n  } else {\n    console.log('')\n  } \n} \n\nexport {addPerson, deletePerson}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    if (message.error) {\n      return (\n        <div className = \"error\">\n          {message.message}\n        </div>\n      )\n    } else {\n      return (  \n        <div className = \"success\">\n          {message.message}\n        </div>\n      )\n    }\n\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport {addPerson, deletePerson} from './components/Person'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])  \n  const [newName, setNewName] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll] = useState(false)\n  const [newMessage, setNewMessage] = useState(null)\n\n   useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setSearchName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase())) \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={newMessage}/>\n      <div>\n          filter shown with <input \n          value = {searchName}\n          onChange={handleNameChange}/>\n      </div>\n      <h2>Add new person</h2>  \n      <form onSubmit={(event) => {\n        addPerson(event, {persons, newName, newNumber, newMessage, setPersons, setNewName, setNewNumber, setNewMessage})\n      }}>\n        <div>\n          name: <input \n          value = {newName}\n          onChange={handlePersonChange}/>\n          number: <input\n          value = {newNumber}\n          onChange={handleNumberChange}/>\n        </div>\n        <div> \n          <button type=\"submit\">add</button>   \n        </div>\n      </form>\n      <h2>Numbers</h2>\n        {personsToShow.map(function(person) {\n          return <ul \n            key={person.id}>{person.name} {person.number}\n            <button onClick={() => deletePerson(person.id, person.name, setPersons, setNewMessage)}>delete</button>\n          </ul>\n        })}\n    </div>\n  )\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import axios from 'axios'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/* axios\n  .get('http://localhost:3001/persons')\n  .then(response => {\n    const notes = response.data\n    ReactDOM.render(\n      <App notes={notes} />,\n      document.getElementById('root')\n    )\n})\n\naxios\n  .get('http://localhost:3001/foobar')\n  .then(response => {\n    const notes2 = response.data\n    ReactDOM.render(\n      <App notes={notes2} />,\n      document.getElementById('root')\n    )  \n}) */\n\n\n"],"sourceRoot":""}